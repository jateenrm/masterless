package main

import "log"
import "net/http"
import "github.com/gorilla/mux"
import "encoding/json"

type Person struct {ID	string 'json:"id"'Firstname	string 'json:"firstname"'Lastname	string 'json:"lastname"'Address	*Address 'json:"address"'}

type Address struct {City	string 'json:"city"'State	string 'json:"state"'}

var people []Person

func GetPersonEndpoint(w http.ResponseWriter, req *http.Request) {
}

func GetPeopleEndpoint(w http.ResponseWriter, req *http.Request) {
json.NewEncoder(w).Encode(people)
}

func CreatePersonEndpoint(w http.ResponseWriter, req *http.Request) {
}

func DeletePersonEndpoint(w http.ResponseWriter, req *http.Request) {
}

func main() {
	router := mux.NewRouter()
	people = append(people, Person{ID: "1", Firstname: "Jateen", Lastname: "Mahadik", Address: &Address{City: "Manama"}})
	people = append(people, Person{ID: "2", Firstname: "Suman", Lastname: "Relekar"})
	people = append(people, Person{ID: "3", Firstname: "Chhavi", Lastname: "Mahadik", Address: &Address{City: "Bangalore"}})
	router.HandleFunc("/people", GetPeopleEndpoint.Methods("GET")
	router.HandleFunc("/people/{id}", GetPersonEndpoint.Methods("GET")
	router.HandleFunc("/people/{id}", CreatePersonEndpoint.Methods("POST")
	router.HandleFunc("/people/{id}", GetPersonEndpoint.Methods("DELETE")
	log.Fatal(http.ListenAndServe(":12345", router))
}
